{
  "name": "formatter-jsbeautify",
  "main": "./lib/formatter-jsbeautify",
  "version": "1.0.2",
  "description": "Formatter for Javascript, HTML, CSS, LESS, SASS.",
  "keywords": [
    "formatter",
    "format",
    "beautify",
    "beautifier",
    "pretty",
    "javascript",
    "js",
    "html",
    "css",
    "less",
    "sass",
    "js-beautify"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gouvinb/formatter-jsbeautify.git"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "dependencies": {},
  "providedServices": {
    "formatter": {
      "versions": {
        "1.0.0": "provideFormatter"
      }
    }
  },
  "readme": "# formatter-jsbeautify package\n\nFormatter for Javascript, HTML, CSS, LESS, SASS.\n\nThis Formatter plugin for [Formatter](https://atom.io/packages/formatter)\nprovides an interface to\n[js-beautify](https://github.com/beautify-web/js-beautify).\n\n## Installation\n\n1.  Install js-beautify (`npm install -g js-beautify`)\n\n2.  Install [Formatter](https://atom.io/packages/formatter) package via Atom\n\n    -   *or with* `apm install formatter`\n\n3.  Install formatter-jsbeautify package via Atom\n\n    -   *or with* `apm install formatter-jsbeautify`\n\n## Usage\n\n### In your source compatible file\n\nDefault (inspired from IntelliJ):\n\n```cson\n'atom-text-editor':\n  'alt-ctrl-l': 'formatter:format-code'\n  'alt-cmd-l': 'formatter:format-code'\n```\n\n### List of config\n\n-   Path to the exectuable node\n\n    -   **Full path** node\n\n-   Path to the exectuable js-beautify\n\n    -   **Full path** js-beautify\n\n-   Javascript language\n\n    -   Enable formatter for Javascript language (*need restart Atom*)\n\n    -   Arguments passed to the formatter Javascript language\n\n        -   Example : `-s, 3, -w, 80`\n\n-   HTML language\n\n    -   Enable formatter for HTML language (*need restart Atom*)\n\n    -   Arguments passed to the formatter HTML language\n\n        -   Example : `-s, 8, -w, 160`\n\n-   CSS language\n\n    -   Enable formatter for CSS language (*need restart Atom*)\n\n    -   Arguments passed to the formatter CSS language\n\n        -   Example : `-config=/usr/local/mycfg/css/.jsbeautifyrc`\n\n-   LESS language\n\n    -   Enable formatter for LESS language (*need restart Atom*)\n\n    -   Arguments passed to the formatter LESS language\n\n        -   Example : `-config=/usr/local/mycfg/less/.jsbeautifyrc`\n\n-   SASS language\n\n    -   Enable formatter for SASS language (*need restart Atom*)\n\n    -   Arguments passed to the formatter SASS language\n\n        -   Example : `-config=/usr/local/mycfg/sass/.jsbeautifyrc`\n\n## TODO\n\n-   [ ] optimize enable config\n\n-   [ ] cursor position\n\n-   [ ] more optimization ?\n\n    -   [ ] env node ?\n\n## Contributing\n\n1.  Fork it!\n2.  Create your feature branch: `git checkout -b my-new-feature`\n3.  Commit your changes: `git commit -am 'Add some feature'`\n4.  Push to the branch: `git push origin my-new-feature`\n5.  Submit a pull request :D\n\n## License\n\nSee [LICENSE.md](./LICENSE.md)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gouvinb/formatter-jsbeautify/issues"
  },
  "homepage": "https://github.com/gouvinb/formatter-jsbeautify#readme",
  "_id": "formatter-jsbeautify@1.0.2",
  "_shasum": "5d85b60f9076f74d222b4462b9e9d70bfdd8fd59",
  "_resolved": "file:../d-11678-2014-1ipr6r3/package.tgz",
  "_from": "../d-11678-2014-1ipr6r3/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [],
    "extensions": {
      ".coffee": [
        "lib/formatter-jsbeautify.coffee"
      ],
      ".json": [
        "package.json"
      ]
    },
    "folders": []
  }
}